
B3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000288  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000068  00000000  00000000  000002b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000dd4  00000000  00000000  0000031f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000087e  00000000  00000000  000010f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000495  00000000  00000000  00001971  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000ec  00000000  00000000  00001e08  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000304  00000000  00000000  00002171  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00002475  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000230  00000230  00000284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.wait    0000001e  000001ea  000001ea  0000023e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.lcd_strobe_lcd_e 00000026  000001c4  000001c4  00000218  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.init    0000003e  000000a4  000000a4  000000f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_write_data 00000036  000000e2  000000e2  00000136  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_clear 0000001e  00000208  00000208  0000025c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.adcInit 0000000a  00000226  00000226  0000027a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.update_lcd 0000002c  00000148  00000148  0000019c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.main    00000030  00000118  00000118  0000016c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.libgcc.div 00000028  00000174  00000174  000001c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.libgcc.div 00000028  0000019c  0000019c  000001f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
   8:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
   c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  10:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  14:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  18:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  1c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  20:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  24:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  28:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  2c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  30:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  34:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  38:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  3c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  40:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  44:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  48:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  4c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  50:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  54:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  58:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  5c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  60:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  64:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  68:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  6c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  70:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  74:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  78:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  7c:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  80:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  84:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>
  88:	0c 94 18 01 	jmp	0x230	; 0x230 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  9c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>

Disassembly of section .text:

00000230 <__bad_interrupt>:
 230:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.wait:

000001ea <wait>:

	// Second nibble
	PORTC = (byte<<4);
	PORTA &= ~(1<<LCD_RS);
	lcd_strobe_lcd_e();
}
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	08 c0       	rjmp	.+16     	; 0x200 <wait+0x16>
 1f0:	ef ec       	ldi	r30, 0xCF	; 207
 1f2:	f7 e0       	ldi	r31, 0x07	; 7
 1f4:	31 97       	sbiw	r30, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <wait+0xa>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <wait+0x10>
 1fa:	00 00       	nop
 1fc:	2f 5f       	subi	r18, 0xFF	; 255
 1fe:	3f 4f       	sbci	r19, 0xFF	; 255
 200:	28 17       	cp	r18, r24
 202:	39 07       	cpc	r19, r25
 204:	ac f3       	brlt	.-22     	; 0x1f0 <wait+0x6>
 206:	08 95       	ret

Disassembly of section .text.lcd_strobe_lcd_e:

000001c4 <lcd_strobe_lcd_e>:
 1c4:	85 b3       	in	r24, 0x15	; 21
 1c6:	88 60       	ori	r24, 0x08	; 8
 1c8:	85 bb       	out	0x15, r24	; 21
 1ca:	8f ec       	ldi	r24, 0xCF	; 207
 1cc:	97 e0       	ldi	r25, 0x07	; 7
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <lcd_strobe_lcd_e+0xa>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <lcd_strobe_lcd_e+0x10>
 1d4:	00 00       	nop
 1d6:	85 b3       	in	r24, 0x15	; 21
 1d8:	87 7f       	andi	r24, 0xF7	; 247
 1da:	85 bb       	out	0x15, r24	; 21
 1dc:	8f ec       	ldi	r24, 0xCF	; 207
 1de:	97 e0       	ldi	r25, 0x07	; 7
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <lcd_strobe_lcd_e+0x1c>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <lcd_strobe_lcd_e+0x22>
 1e6:	00 00       	nop
 1e8:	08 95       	ret

Disassembly of section .text.init:

000000a4 <init>:
  a4:	cf 93       	push	r28
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 bb       	out	0x14, r24	; 20
  aa:	15 ba       	out	0x15, r1	; 21
  ac:	c0 e2       	ldi	r28, 0x20	; 32
  ae:	c5 bb       	out	0x15, r28	; 21
  b0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  b4:	c5 bb       	out	0x15, r28	; 21
  b6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  ba:	80 e8       	ldi	r24, 0x80	; 128
  bc:	85 bb       	out	0x15, r24	; 21
  be:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  c2:	15 ba       	out	0x15, r1	; 21
  c4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	85 bb       	out	0x15, r24	; 21
  cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  d0:	15 ba       	out	0x15, r1	; 21
  d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  d6:	80 e6       	ldi	r24, 0x60	; 96
  d8:	85 bb       	out	0x15, r24	; 21
  da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  de:	cf 91       	pop	r28
  e0:	08 95       	ret

Disassembly of section .text.lcd_write_data:

000000e2 <lcd_write_data>:
  e2:	cf 93       	push	r28
  e4:	c8 2f       	mov	r28, r24
  e6:	85 bb       	out	0x15, r24	; 21
  e8:	85 b3       	in	r24, 0x15	; 21
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
  f2:	c2 95       	swap	r28
  f4:	c0 7f       	andi	r28, 0xF0	; 240
  f6:	c5 bb       	out	0x15, r28	; 21
  f8:	85 b3       	in	r24, 0x15	; 21
  fa:	84 60       	ori	r24, 0x04	; 4
  fc:	85 bb       	out	0x15, r24	; 21
  fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
 102:	2f e7       	ldi	r18, 0x7F	; 127
 104:	88 e3       	ldi	r24, 0x38	; 56
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	21 50       	subi	r18, 0x01	; 1
 10a:	80 40       	sbci	r24, 0x00	; 0
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	e1 f7       	brne	.-8      	; 0x108 <lcd_write_data+0x26>
 110:	00 c0       	rjmp	.+0      	; 0x112 <lcd_write_data+0x30>
 112:	00 00       	nop
 114:	cf 91       	pop	r28
 116:	08 95       	ret

Disassembly of section .text.lcd_clear:

00000208 <lcd_clear>:
 208:	15 ba       	out	0x15, r1	; 21
 20a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	85 bb       	out	0x15, r24	; 21
 212:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
 216:	15 ba       	out	0x15, r1	; 21
 218:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	85 bb       	out	0x15, r24	; 21
 220:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_strobe_lcd_e>
 224:	08 95       	ret

Disassembly of section .text.adcInit:

00000226 <adcInit>:

void adcInit( void )
{
	ADMUX = 0b11100001;			// AREF=2,56 V, result left adjusted, channel1 at pin PF3
 226:	81 ee       	ldi	r24, 0xE1	; 225
 228:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110;		// ADC-enable, no interrupt, no free running, division by 64
 22a:	86 e8       	ldi	r24, 0x86	; 134
 22c:	86 b9       	out	0x06, r24	; 6
 22e:	08 95       	ret

Disassembly of section .text.update_lcd:

00000148 <update_lcd>:

	// Second nibble
	PORTC = (byte<<4);
	PORTA &= ~(1<<LCD_RS);
	lcd_strobe_lcd_e();
}
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
 152:	ce 01       	movw	r24, r28
 154:	6a e0       	ldi	r22, 0x0A	; 10
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	0e 94 ba 00 	call	0x174	; 0x174 <__divmodhi4>
 15c:	c8 2f       	mov	r28, r24
 15e:	80 e3       	ldi	r24, 0x30	; 48
 160:	86 0f       	add	r24, r22
 162:	0e 94 71 00 	call	0xe2	; 0xe2 <lcd_write_data>
 166:	80 e3       	ldi	r24, 0x30	; 48
 168:	8c 0f       	add	r24, r28
 16a:	0e 94 71 00 	call	0xe2	; 0xe2 <lcd_write_data>
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

Disassembly of section .text.main:

00000118 <main>:
 118:	0e 94 52 00 	call	0xa4	; 0xa4 <__data_load_end>
 11c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	8a bb       	out	0x1a, r24	; 26
 124:	0e 94 13 01 	call	0x226	; 0x226 <adcInit>
 128:	86 b1       	in	r24, 0x06	; 6
 12a:	80 64       	ori	r24, 0x40	; 64
 12c:	86 b9       	out	0x06, r24	; 6
 12e:	36 99       	sbic	0x06, 6	; 6
 130:	fe cf       	rjmp	.-4      	; 0x12e <main+0x16>
 132:	85 b1       	in	r24, 0x05	; 5
 134:	8b bb       	out	0x1b, r24	; 27
 136:	85 b1       	in	r24, 0x05	; 5
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 a4 00 	call	0x148	; 0x148 <update_lcd>
 13e:	84 ef       	ldi	r24, 0xF4	; 244
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	0e 94 f5 00 	call	0x1ea	; 0x1ea <wait>
 146:	f0 cf       	rjmp	.-32     	; 0x128 <main+0x10>

Disassembly of section .text.libgcc.div:

00000174 <__divmodhi4>:
 174:	97 fb       	bst	r25, 7
 176:	07 2e       	mov	r0, r23
 178:	16 f4       	brtc	.+4      	; 0x17e <__divmodhi4+0xa>
 17a:	00 94       	com	r0
 17c:	07 d0       	rcall	.+14     	; 0x18c <__divmodhi4_neg1>
 17e:	77 fd       	sbrc	r23, 7
 180:	09 d0       	rcall	.+18     	; 0x194 <__divmodhi4_neg2>
 182:	0e 94 ce 00 	call	0x19c	; 0x19c <__udivmodhi4>
 186:	07 fc       	sbrc	r0, 7
 188:	05 d0       	rcall	.+10     	; 0x194 <__divmodhi4_neg2>
 18a:	3e f4       	brtc	.+14     	; 0x19a <__divmodhi4_exit>

0000018c <__divmodhi4_neg1>:
 18c:	90 95       	com	r25
 18e:	81 95       	neg	r24
 190:	9f 4f       	sbci	r25, 0xFF	; 255
 192:	08 95       	ret

00000194 <__divmodhi4_neg2>:
 194:	70 95       	com	r23
 196:	61 95       	neg	r22
 198:	7f 4f       	sbci	r23, 0xFF	; 255

0000019a <__divmodhi4_exit>:
 19a:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000019c <__udivmodhi4>:
 19c:	aa 1b       	sub	r26, r26
 19e:	bb 1b       	sub	r27, r27
 1a0:	51 e1       	ldi	r21, 0x11	; 17
 1a2:	07 c0       	rjmp	.+14     	; 0x1b2 <__udivmodhi4_ep>

000001a4 <__udivmodhi4_loop>:
 1a4:	aa 1f       	adc	r26, r26
 1a6:	bb 1f       	adc	r27, r27
 1a8:	a6 17       	cp	r26, r22
 1aa:	b7 07       	cpc	r27, r23
 1ac:	10 f0       	brcs	.+4      	; 0x1b2 <__udivmodhi4_ep>
 1ae:	a6 1b       	sub	r26, r22
 1b0:	b7 0b       	sbc	r27, r23

000001b2 <__udivmodhi4_ep>:
 1b2:	88 1f       	adc	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	5a 95       	dec	r21
 1b8:	a9 f7       	brne	.-22     	; 0x1a4 <__udivmodhi4_loop>
 1ba:	80 95       	com	r24
 1bc:	90 95       	com	r25
 1be:	bc 01       	movw	r22, r24
 1c0:	cd 01       	movw	r24, r26
 1c2:	08 95       	ret
