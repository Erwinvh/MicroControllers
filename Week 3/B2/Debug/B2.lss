
B2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002c8  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000060  00000000  00000000  000002f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000def  00000000  00000000  00000357  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000880  00000000  00000000  00001146  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000491  00000000  00000000  000019c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000d0  00000000  00000000  00001e58  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002c0  00000000  00000000  000021a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00002465  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000250  00000250  000002c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.wait    0000001e  00000214  00000214  00000288  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.lcd_strobe_lcd_e 00000026  000001ee  000001ee  00000262  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.init    0000003e  00000152  00000152  000001c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcd_write_data 00000036  00000190  00000190  00000204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcd_clear 0000001e  00000232  00000232  000002a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.update_lcd 00000068  000000ea  000000ea  0000015e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    00000028  000001c6  000001c6  0000023a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .bss.tenthValue 00000002  00800100  00800100  000002c8  2**0
                  ALLOC
 21 .bss.hunderdValue 00000002  00800102  00800102  000002c8  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
   8:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
   c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  10:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  14:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  18:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  1c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  20:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  24:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  28:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  2c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  30:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  34:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  38:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  3c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  40:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  44:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  48:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  4c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  50:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  54:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  58:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  5c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  60:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  64:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  68:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  6c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  70:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  74:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  78:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  7c:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  80:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  84:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>
  88:	0c 94 28 01 	jmp	0x250	; 0x250 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 04       	cpc	r0, r1
  90:	80 00       	.word	0x0080	; ????

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d0 e1       	ldi	r29, 0x10	; 16
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	19 c0       	rjmp	.+50     	; 0xd8 <__do_clear_bss+0x8>
  a6:	b7 91       	elpm	r27, Z+
  a8:	a7 91       	elpm	r26, Z+
  aa:	37 91       	elpm	r19, Z+
  ac:	27 91       	elpm	r18, Z+
  ae:	07 91       	elpm	r16, Z+
  b0:	07 fd       	sbrc	r16, 7
  b2:	0e c0       	rjmp	.+28     	; 0xd0 <__do_clear_bss>
  b4:	97 91       	elpm	r25, Z+
  b6:	87 91       	elpm	r24, Z+
  b8:	ef 01       	movw	r28, r30
  ba:	f9 2f       	mov	r31, r25
  bc:	e8 2f       	mov	r30, r24
  be:	0b bf       	out	0x3b, r16	; 59
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a2 17       	cp	r26, r18
  c6:	b3 07       	cpc	r27, r19
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x22>
  ca:	fe 01       	movw	r30, r28
  cc:	1b be       	out	0x3b, r1	; 59
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <__do_clear_bss+0x8>

000000d0 <__do_clear_bss>:
  d0:	1d 92       	st	X+, r1
  d2:	a2 17       	cp	r26, r18
  d4:	b3 07       	cpc	r27, r19
  d6:	e1 f7       	brne	.-8      	; 0xd0 <__do_clear_bss>
  d8:	e1 39       	cpi	r30, 0x91	; 145
  da:	f4 07       	cpc	r31, r20
  dc:	21 f7       	brne	.-56     	; 0xa6 <__do_copy_data+0x8>
  de:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <main>
  e2:	0c 94 73 00 	jmp	0xe6	; 0xe6 <_exit>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>

Disassembly of section .text:

00000250 <__bad_interrupt>:
 250:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.wait:

00000214 <wait>:

	// of met een for:
	//for(;*str; str++){
	//	lcd_write_data(*str);
	//}
}
 214:	20 e0       	ldi	r18, 0x00	; 0
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	08 c0       	rjmp	.+16     	; 0x22a <wait+0x16>
 21a:	ef ec       	ldi	r30, 0xCF	; 207
 21c:	f7 e0       	ldi	r31, 0x07	; 7
 21e:	31 97       	sbiw	r30, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <wait+0xa>
 222:	00 c0       	rjmp	.+0      	; 0x224 <wait+0x10>
 224:	00 00       	nop
 226:	2f 5f       	subi	r18, 0xFF	; 255
 228:	3f 4f       	sbci	r19, 0xFF	; 255
 22a:	28 17       	cp	r18, r24
 22c:	39 07       	cpc	r19, r25
 22e:	ac f3       	brlt	.-22     	; 0x21a <wait+0x6>
 230:	08 95       	ret

Disassembly of section .text.lcd_strobe_lcd_e:

000001ee <lcd_strobe_lcd_e>:
 1ee:	85 b3       	in	r24, 0x15	; 21
 1f0:	88 60       	ori	r24, 0x08	; 8
 1f2:	85 bb       	out	0x15, r24	; 21
 1f4:	8f ec       	ldi	r24, 0xCF	; 207
 1f6:	97 e0       	ldi	r25, 0x07	; 7
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <lcd_strobe_lcd_e+0xa>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <lcd_strobe_lcd_e+0x10>
 1fe:	00 00       	nop
 200:	85 b3       	in	r24, 0x15	; 21
 202:	87 7f       	andi	r24, 0xF7	; 247
 204:	85 bb       	out	0x15, r24	; 21
 206:	8f ec       	ldi	r24, 0xCF	; 207
 208:	97 e0       	ldi	r25, 0x07	; 7
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <lcd_strobe_lcd_e+0x1c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <lcd_strobe_lcd_e+0x22>
 210:	00 00       	nop
 212:	08 95       	ret

Disassembly of section .text.init:

00000152 <init>:
 152:	cf 93       	push	r28
 154:	8f ef       	ldi	r24, 0xFF	; 255
 156:	84 bb       	out	0x14, r24	; 20
 158:	15 ba       	out	0x15, r1	; 21
 15a:	c0 e2       	ldi	r28, 0x20	; 32
 15c:	c5 bb       	out	0x15, r28	; 21
 15e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 162:	c5 bb       	out	0x15, r28	; 21
 164:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 168:	80 e8       	ldi	r24, 0x80	; 128
 16a:	85 bb       	out	0x15, r24	; 21
 16c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 170:	15 ba       	out	0x15, r1	; 21
 172:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 176:	80 ef       	ldi	r24, 0xF0	; 240
 178:	85 bb       	out	0x15, r24	; 21
 17a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 17e:	15 ba       	out	0x15, r1	; 21
 180:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 184:	80 e6       	ldi	r24, 0x60	; 96
 186:	85 bb       	out	0x15, r24	; 21
 188:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

Disassembly of section .text.lcd_write_data:

00000190 <lcd_write_data>:
 190:	cf 93       	push	r28
 192:	c8 2f       	mov	r28, r24
 194:	85 bb       	out	0x15, r24	; 21
 196:	85 b3       	in	r24, 0x15	; 21
 198:	84 60       	ori	r24, 0x04	; 4
 19a:	85 bb       	out	0x15, r24	; 21
 19c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 1a0:	c2 95       	swap	r28
 1a2:	c0 7f       	andi	r28, 0xF0	; 240
 1a4:	c5 bb       	out	0x15, r28	; 21
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	84 60       	ori	r24, 0x04	; 4
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 1b0:	2f e7       	ldi	r18, 0x7F	; 127
 1b2:	88 e3       	ldi	r24, 0x38	; 56
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <lcd_write_data+0x26>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <lcd_write_data+0x30>
 1c0:	00 00       	nop
 1c2:	cf 91       	pop	r28
 1c4:	08 95       	ret

Disassembly of section .text.lcd_clear:

00000232 <lcd_clear>:

void lcd_clear() {
	PORTC = 0x00;   // Entry mode set
 232:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 234:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
	PORTC = 0x01;
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 23c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
	PORTC = 0x00;   // Entry mode set
 240:	15 ba       	out	0x15, r1	; 21
	lcd_strobe_lcd_e();
 242:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
	PORTC = 0x02;
 246:	82 e0       	ldi	r24, 0x02	; 2
 248:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 24a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <lcd_strobe_lcd_e>
 24e:	08 95       	ret

Disassembly of section .text.update_lcd:

000000ea <update_lcd>:

	// of met een for:
	//for(;*str; str++){
	//	lcd_write_data(*str);
	//}
}
  ea:	8a 33       	cpi	r24, 0x3A	; 58
  ec:	50 f0       	brcs	.+20     	; 0x102 <update_lcd+0x18>
  ee:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  f2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 100:	14 bc       	out	0x24, r1	; 36
 102:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 106:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 10a:	0a 97       	sbiw	r24, 0x0a	; 10
 10c:	6c f0       	brlt	.+26     	; 0x128 <update_lcd+0x3e>
 10e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hunderdValue>
 112:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <hunderdValue+0x1>
 116:	01 96       	adiw	r24, 0x01	; 1
 118:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <hunderdValue+0x1>
 11c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <hunderdValue>
 120:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 124:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 128:	0e 94 19 01 	call	0x232	; 0x232 <lcd_clear>
 12c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hunderdValue>
 130:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <hunderdValue+0x1>
 134:	80 5d       	subi	r24, 0xD0	; 208
 136:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_write_data>
 13a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 13e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 142:	80 5d       	subi	r24, 0xD0	; 208
 144:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_write_data>
 148:	84 b5       	in	r24, 0x24	; 36
 14a:	80 5d       	subi	r24, 0xD0	; 208
 14c:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_write_data>
 150:	08 95       	ret

Disassembly of section .text.main:

000001c6 <main>:
 1c6:	81 b3       	in	r24, 0x11	; 17
 1c8:	8f 77       	andi	r24, 0x7F	; 127
 1ca:	81 bb       	out	0x11, r24	; 17
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	87 bb       	out	0x17, r24	; 23
 1d0:	87 e0       	ldi	r24, 0x07	; 7
 1d2:	85 bd       	out	0x25, r24	; 37
 1d4:	0e 94 a9 00 	call	0x152	; 0x152 <init>
 1d8:	84 b5       	in	r24, 0x24	; 36
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	84 b5       	in	r24, 0x24	; 36
 1de:	80 5d       	subi	r24, 0xD0	; 208
 1e0:	0e 94 75 00 	call	0xea	; 0xea <_etext>
 1e4:	84 e6       	ldi	r24, 0x64	; 100
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 0a 01 	call	0x214	; 0x214 <wait>
 1ec:	f5 cf       	rjmp	.-22     	; 0x1d8 <main+0x12>
